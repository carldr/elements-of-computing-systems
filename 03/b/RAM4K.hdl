// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM4K {
	IN in[16], load, address[12];
	OUT out[16];

	PARTS:
	DMux8Way(in=load,sel=address[9..11],a=outa,b=outb,c=outc,d=outd,e=oute,f=outf,g=outg,h=outh);
	
	RAM512(in=in,address=address[0..8],load=outa,out=ramouta);
	RAM512(in=in,address=address[0..8],load=outb,out=ramoutb);
	RAM512(in=in,address=address[0..8],load=outc,out=ramoutc);
	RAM512(in=in,address=address[0..8],load=outd,out=ramoutd);
	RAM512(in=in,address=address[0..8],load=oute,out=ramoute);
	RAM512(in=in,address=address[0..8],load=outf,out=ramoutf);
	RAM512(in=in,address=address[0..8],load=outg,out=ramoutg);
	RAM512(in=in,address=address[0..8],load=outh,out=ramouth);
	
	Mux8Way16(a=ramouta,b=ramoutb,c=ramoutc,d=ramoutd,e=ramoute,f=ramoutf,g=ramoutg,h=ramouth,sel=address[9..11],out=out);
}